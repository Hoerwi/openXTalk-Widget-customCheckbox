/**
Summary: Allows individual settings of a checkbox.

Description:
Allows individual settings of a checkbox.
Checkbox as Square, Roundrect or Circle, Icon as Check or Cross
the label can be displayed to the left or right of the checkbox.

Name: checked
Type: property

Syntax: set the checked of <widget> to true|false

Summary: set the Checkbox to activ / inactiv


Name: flip
Type: property

Syntax: set the flip of <widget> to true|false

Summary: Flips the Label to left or right of the checkbox


Name: label
Type: property

Syntax: set the label of <widget> to <string>

Summary: Set the Label of Checkbox


Name: theme
Type: property

Syntax: set the theme of <widget> to square|round|circle

Summary: the Theme of the corner can be changed


Name: checkstyle
Type: property

Syntax: set the checkstyle of <widget> to check|cross

Summary: the Icon of the checker can be changed

*/




widget open.widget.hoerwi.customcheckbox

	use com.livecode.canvas
	use com.livecode.widget
	use com.livecode.engine
	
	metadata title is "custom Checkbox"
	metadata author is "Andreas Strauch"
	metadata version is "1.0.0"
	metadata svgicon is "M26.667 110.000 C 13.046 123.621,13.046 276.379,26.667 290.000 C 40.287 303.621,193.046 303.621,206.667 290.000 C 220.287 276.379,220.287 123.621,206.667 110.000 C 193.046 96.379,40.287 96.379,26.667 110.000 M178.571 138.095 C 196.640 156.164,196.640 243.836,178.571 261.905 C 169.648 270.828,149.928 275.000,116.667 275.000 C 52.729 275.000,41.667 263.938,41.667 200.000 C 41.667 136.062,52.729 125.000,116.667 125.000 C 149.928 125.000,169.648 129.172,178.571 138.095 M122.841 180.947 C 105.111 198.677,98.043 201.376,90.114 193.447 C 75.092 178.425,58.333 181.200,58.333 198.708 C 58.333 216.576,83.282 241.667,101.048 241.667 C 115.611 241.667,175.000 182.827,175.000 168.399 C 175.000 150.676,146.177 157.610,122.841 180.947 M250.000 200.000 C 250.000 215.278,255.556 216.667,316.667 216.667 C 377.778 216.667,383.333 215.278,383.333 200.000 C 383.333 184.722,377.778 183.333,316.667 183.333 C 255.556 183.333,250.000 184.722,250.000 200.000"
	metadata preferredSize is "150,40"
	
	private variable mTheme as String
	private variable mCheckStyle as String
	private variable mLabel as String
	private variable mChecked as Boolean
	private variable mState as String
	private variable tPath as Path
	private variable tAlign as Boolean

		
	property label 				get mLabel 		set setLabel
		metadata label.editor is "com.livecode.pi.string"
		metadata label.default is "custom Checkbox"
		metadata label.label is "Label"
		
	property flip				get tAlign 		set setAlign
		metadata flip.default is "false"
		metadata flip.label is "Flip"
		
	property theme				get mTheme 		set setTheme
		metadata theme.editor is "com.livecode.pi.enum"
		metadata theme.options is "square,round,circle"
		metadata theme.default is "square"
		metadata theme.label is "Theme"
	
	property checkstyle			get mCheckStyle set setCheckStyle
		metadata checkstyle.editor is "com.livecode.pi.enum"
		metadata checkstyle.options is "check,cross"
		metadata checkstyle.default is "check"
		metadata checkstyle.label is "Theme"
		
	property checked			get mChecked 	set setChecked
		metadata checked.default is "false"
		metadata checked.label is "is checked"
		
	
	constant kPadding is 15
	constant kWidth is 16
	
-- Theme

-- Handler	
	
	public handler setTheme(in pTheme as String) returns nothing
		put pTheme into mTheme
		redraw all
	end handler
	
	public handler setAlign(in pAlign as Boolean) returns nothing
		put pAlign into tAlign
		redraw all
	end handler
	
	public handler setCheckStyle(in pCheckStyle as String) returns nothing
		put pCheckStyle into mCheckStyle
		redraw all
	end handler

	public handler setLabel(in pLabel as String) returns nothing
		put pLabel into mLabel
		redraw all
	end handler

	public handler setChecked(in pChecked as Boolean) returns nothing
		put pChecked into mChecked
		redraw all
	end handler	
	
	
	private handler getLabelRect() returns Rectangle
		variable tLabelRect as Rectangle
		put my bounds into tLabelRect
		if tAlign then
			add 2/kPadding-2*kWidth-5 to the x of tLabelRect
		else
			add kPadding+kWidth+5 to the x of tLabelRect
		end if
		return tLabelRect
	end handler	
	
	private handler getIcon() returns Rectangle
		variable tIconRect as Rectangle
		put my bounds into tIconRect
		if tAlign then
			if mCheckStyle is "check" then
				add 2/kPadding-kWidth+0.75 to the x of tIconRect
			else
				add 2/kPadding-kWidth-1.25 to the x of tIconRect
			end if
			
			add 2/my height-0.75 to the y of tIconRect
		else
			if mCheckStyle is "check" then
				add kPadding+1.25 to the x of tIconRect
			else
				add kPadding+2.5 to the x of tIconRect
			end if
			
			add 2/my height-0.75 to the y of tIconRect
		end if
		
		return tIconRect
	end handler	
	
-- Standards	
	
	public handler OnSave(out rProperties as Array)
		put the empty array into rProperties
		put mCheckStyle into rProperties["checkstyle"]
		put mLabel into rProperties["label"]
		put tAlign into rProperties["flip"]
		put mChecked into rProperties["checked"]
		put mTheme into rProperties["theme"]
	end handler

	public handler OnLoad(in pProperties as Array)
		put pProperties["checkstyle"] into mCheckStyle
		put pProperties["label"] into mLabel
		put pProperties["checked"] into mChecked
		put pProperties["flip"] into tAlign
		put pProperties["theme"] into mTheme
	end handler

	public handler OnCreate()
		put "square" into mTheme
		put "custom Checkbox" into mLabel
		put "check" into mCheckStyle
		put false into mChecked
		put false into tAlign
		put "" into mState
	end handler	
	
-- Mouse actions

	public handler OnMouseDown()
		put "pressed" into mState
		redraw all
	end handler
	
	public handler OnMouseUp()
		put "" into mState
		setChecked(not(mChecked))
		redraw all
    	post "mouseUp" with [mLabel]
	end handler
	

	
-- onPaint

	public handler onPaint()
	set the stroke width of this canvas to 1.5
	variable tFont as String
	
		if mCheckStyle is "check" then
			put "\u{f00c}" into tFont
		else if mCheckStyle is "cross" then
			put "\u{f00d}" into tFont
		end if
		
	-- Checkbox
	
		if tAlign then
		if mTheme is "round" then
		 		put rounded rectangle path of rectangle [my width - kPadding*2, my height/2 - kWidth/2, my width-kPadding*2+kWidth, my height/2 + kWidth/2] with radius 3 into tPath
			else if mTheme is "square" then
				put rectangle path of rectangle [my width - kPadding*2, my height/2 - kWidth/2, my width-kPadding*2+kWidth, my height/2 + kWidth/2] into tPath
			else if mTheme is "circle" then
				put rounded rectangle path of rectangle [my width - kPadding*2, my height/2 - kWidth/2, my width-kPadding*2+kWidth, my height/2 + kWidth/2] with radius 45 into tPath
			end if	
			stroke tPath on this canvas
			
			fill text mLabel at right of getLabelRect() on this canvas
			
			if mChecked is true then
				set the font of this canvas to font "fontawesome" at size 13
				fill text tFont at right of getIcon() on this canvas
			end if
			
		else
			if mTheme is "round" then
		 		put rounded rectangle path of rectangle [kPadding, my height/2 - kWidth/2, kPadding+kWidth, my height/2 + kWidth/2] with radius 3 into tPath
			else if mTheme is "square" then
				put rectangle path of rectangle [kPadding, my height/2 - kWidth/2, kPadding+kWidth, my height/2 + kWidth/2] into tPath
			else if mTheme is "circle" then
				put rounded rectangle path of rectangle [kPadding, my height/2 - kWidth/2, kPadding+kWidth, my height/2 + kWidth/2] with radius 45 into tPath
			end if	
			stroke tPath on this canvas
		
			fill text mLabel at left of getLabelRect() on this canvas
			
			if mChecked is true then
				set the font of this canvas to font "fontawesome" at size 13
				fill text tFont at left of getIcon() on this canvas
			end if
		
		

		end if
		
	
	
		
		
	end handler
	
	
	
	
	

	
	
end widget